#Una vez que se ha intalado cuckoo, es necesario proceder a configurarlo. 
#En el directorio de trabajo, se encuentran diferentes archivos de configuración que permiten hacerlo.


# Configuramos Virtualbox
	su cuckoo

	#Añadimos una red en virtualBox (desde la interfaz grafica tambien se puede)
	vboxmanage hostonlyif create
	vboxmanage hostonlyif ipconfig vboxnet0 --ip 192.168.56.1
	#Creamos la VM indicando que el adaptador de red será solo anfitrion, pero antes debemos configurarla mientras haya internet
	#
	VBoxManage modifyvm cuckoo1 --nested-hw-virt on
	
	exit
	
	#
	sudo mkdir /opt/systemd/
	sudo nano /opt/systemd/vboxhostonly
	#	!/bin/bash
	#	hostonlyif create
	#	vboxmanage hostonlyif ipconfig vboxnet0 --ip 192.168.56.1

	sudo chmod a+x /opt/systemd/vboxhostonly

	sudo touch /etc/systemd/system/vboxhostonlynic.service
	sudo nano /etc/systemd/system/vboxhostonlynic.service
	#	Description=Setup VirtualBox Hostonly Adapter
	#	After=vboxdrv.service
	#	
	#	[Service]
	#	Type=oneshot
	#	ExecStart=/opt/systemd/vboxhostonly
	#	
	#	[Install]
	#	WantedBy=multi-user.target

	systemctl daemon-reload
	systemctl enable vboxhostonlynic.service

# Configuramos las reglas del firewall del host
	
	#Instalamos iptables-persistent
	sudo apt-get install -y iptables-persistent

	##Creamos las reglas (opcion 1)
	sudo iptables -A FORWARD -o ens160 -i vboxnet0 -s 192.168.56.0/24 -m conntrack --ctstate NEW -j ACCEPT
	sudo iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
	sudo iptables -t nat -A POSTROUTING -o ens160 -j MASQUERADE
	sudo iptables -L
	
	##Creamos las reglas (opcion 2)
	#Esta opción permite que la maquina virtual acceda a internet

	
	# Por defecto cualquier paquete para reenviar se tira
	sudo iptables -P FORWARD DROP
	# Las conexiones existentes se admiten
	sudo iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
	# Las conexiones de la red interna virtual se admiten para ser reenviadas
	sudo iptables -A FORWARD -s 192.168.56.0/24 -j ACCEPT
	# Las conexiones de la red interna virtual hacia la red interna se admiten para ser reenviadas
	sudo iptables -A FORWARD -s 192.168.56.0/24 -d 192.168.56.0/24 -j ACCEPT
	# Log stuff that reaches this point (could be noisy).
	sudo iptables -A FORWARD -j LOG
	# Una vez se ha filtrado el tráfico a ser reenviado, y que se ha decidido su interfaz de salida (se ha enrutado el paquete), se hace nat para que las direcciones internas no salgan a la luz, y todo el trafico de salida parezca que es del equipo fisico host
	#eno1 es la interfaz de red del ordenador fisico que esta conectada a internet
	sudo iptables -t nat -A POSTROUTING -o eno1 -s 192.168.56.0/24 -j MASQUERADE

	##Creamos las reglas


	#Activamos el reenvío de tráfico en el kernel
	echo 1 | sudo tee -a /proc/sys/net/ipv4/ip_forward 
	sudo sysctl -w net.ipv4.ip_forward=1

	sudo nano /etc/sysctl.conf
	###Remove the # from net.ipv4.ip_forward=1 

	#Guardamos las reglas
	sudo su
	iptables-save > /etc/iptables/rules.v4


# Configuramos cuckoo
	su cuckoo
	
	#Pasamos al directorio en el que estan todos los archivos de configuración
	cd ~/.cuckoo/conf

	#En el archivo cuckoo se pueden configurar los aspectos generales del sandbox, y temas relacionados con los análisis
	nano cuckoo.conf
	###	machinery = virtualbox #por defecto
	###	memory_dump = no #por defecto
	###	ip = 192.168.56.1 #por defecto
	###	max_vmstartup_count = 2


	#Este archivo permite configurar las diferentes opciones que tienen los scripts que se emplean para analizar el malware
	nano auxiliary.conf
	###	sniffer enabled = yes #por defecto

	#Este archivo de configuración permite configurar la forma de interactuar con el software de virtualización escogido
	nano virtualbox.conf
	###	virtualbox mode = gui
	###	machines = cuckoo1 #por defecto
	###	platform = linux
	###	ip = 192.168.56.101 #por defecto
	###	snapshot = Final 

	ano memory.conf
	#	delete_memdump = yes

	nano reporting.conf
	#	feedback enabled = no #por defecto
	#	html = yes 
	#	mongodb enabled = yes
	#[misp]
	#enabled = yes
	#url = https://192.168.1.146/
	
	nano processing.conf
	#[misp]
	#enabled = yes
	#url = https://192.168.1.146/
	#apikey = WtSH3J2GBfcM8IQEYcIYathrylggnMADUYYxIZQS
